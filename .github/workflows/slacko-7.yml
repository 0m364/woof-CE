name: slacko-7

on:
  push:
    branches:
      - ci
      - testing
    paths:
      - 'woof-distro/x86/slackware/14.2/**'
      - 'kernel-kit/**'
      - 'woof-code/**'
      - '!woof-code/support/arm_**'
      - 'woof-arch/x86/**'
      - 'merge2out'
      - '!**.svg'
      - '!**.png'
      - '!**.htm'
      - '!**.html'
  pull_request:
    branches:
      - testing
    paths:
      - 'woof-distro/x86/slackware/14.2/**'
      - 'kernel-kit/**'
  schedule:
    - cron: '0 0 * * 4'
  workflow_dispatch:
    branches:
      - ci
      - testing
    inputs:
      version:
        description: 'Version number'
        required: true
        default: '7.1'

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Create cache directories
      run: |
        mkdir -p local-repositories kernel-kit-output
        ln -s `pwd`/local-repositories ../local-repositories
    - name: Get cached local-repositories
      uses: actions/cache@v2
      with:
        path: local-repositories
        key: ${{ github.workflow }}-local-repositories-${{ github.sha }}
        restore-keys: |
          ${{ github.workflow }}-local-repositories-
    - name: Install cdrtools
      run: |
        [ -f local-repositories/mkisofs ] || (curl -L https://sourceforge.net/projects/cdrtools/files/alpha/cdrtools-3.02a09.tar.bz2/download | tar -xjf- && cd cdrtools-3.02 && make -j`nproc` && mv mkisofs/OBJ/x86_64-linux-cc/mkisofs ../local-repositories/mkisofs)
        sudo install -m 755 local-repositories/mkisofs /usr/local/bin/mkisofs
    - name: Prepare build environment
      run: |
        [ -f local-repositories/vercmp ] || (curl https://raw.githubusercontent.com/puppylinux-woof-CE/initrd_progs/master/pkg/w_apps_static/w_apps/vercmp.c | gcc -x c -o ../local-repositories/vercmp -)
        sudo install -m 755 local-repositories/vercmp /usr/local/bin/vercmp
        sudo install -D -m 644 woof-code/rootfs-skeleton/usr/local/petget/categories.dat /usr/local/petget/categories.dat
        echo "dash dash/sh boolean false" | sudo debconf-set-selections
        sudo DEBIAN_FRONTEND=noninteractive dpkg-reconfigure dash
        sudo ln -s bash /bin/ash
    - name: merge2out
      run: |
        (echo 2; echo 2; echo 3; echo; echo) | sudo -E ./merge2out
    - name: Set version
      if: github.event_name == 'workflow_dispatch'
      run: sudo sed -i s/^DISTRO_VERSION=.*/DISTRO_VERSION=${{ github.event.inputs.version }}/ ../woof-out_x86_64_x86_slackware64_14.2/DISTRO_SPECS
    - name: 0setup
      run: |
        cd ../woof-out_x86_64_x86_slackware64_14.2
        sudo ./0setup
    - name: 1download
      run: |
        cd ../woof-out_x86_64_x86_slackware64_14.2
        sudo -E ./1download
    - name: Get cached kernel-kit output
      id: get_kernel_kit_output_cache
      uses: actions/cache@v2
      with:
        path: kernel-kit-output
        key: ${{ github.workflow }}-kernel-kit-output-${{ hashFiles('kernel-kit/**') }}
        restore-keys: |
          ${{ github.workflow }}-kernel-kit-output-
    - name: Move cached kernel-kit output
      run: sudo mv kernel-kit-output ../woof-out_x86_64_x86_slackware64_14.2/kernel-kit/output
    - name: Install ccache
      if: steps.get_kernel_kit_output_cache.outputs.cache-hit != 'true'
      run: |
        sudo apt-get install -y --no-install-recommends ccache
        ccache --set-config=hash_dir=false --set-config=max_size=2.0G
    - name: Get cached ~/.ccache
      if: steps.get_kernel_kit_output_cache.outputs.cache-hit != 'true'
      uses: actions/cache@v2
      with:
        path: ~/.ccache
        key: ${{ github.workflow }}-ccache-${{ hashFiles('kernel-kit/**') }}-${{ github.sha }}
        restore-keys: |
          ${{ github.workflow }}-ccache-${{ hashFiles('kernel-kit/**') }}-
    - name: kernel-kit
      if: steps.get_kernel_kit_output_cache.outputs.cache-hit != 'true'
      run: |
        cd ../woof-out_x86_64_x86_slackware64_14.2/kernel-kit
        sudo cp -f slacko-7-build.conf build.conf
        sudo -E ./build.sh
    - name: 2createpackages
      run: |
        cd ../woof-out_x86_64_x86_slackware64_14.2
        echo | sudo -E ./2createpackages
    - name: 3builddistro
      run: |
        cd ../woof-out_x86_64_x86_slackware64_14.2
        sudo -E ./3builddistro
    - name: Move cached directories
      run: |
        sudo mv ../woof-out_x86_64_x86_slackware64_14.2/kernel-kit/output kernel-kit-output
    - name: Create Release
      if: github.event_name == 'workflow_dispatch'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: slacko-${{ github.event.inputs.version }}
        version: slacko-${{ github.event.inputs.version }}
        draft: false
        prerelease: true
    - name: Upload ISO
      if: github.event_name == 'workflow_dispatch'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ../woof-out_x86_64_x86_slackware64_14.2/woof-output-slacko-${{ github.event.inputs.version }}/slacko-${{ github.event.inputs.version }}.iso
        asset_name: slacko-${{ github.event.inputs.version }}.iso
        asset_content_type: application/octet-stream
    - name: Upload devx
      if: github.event_name == 'workflow_dispatch'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ../woof-out_x86_64_x86_slackware64_14.2/woof-output-slacko-${{ github.event.inputs.version }}/devx_slacko_${{ github.event.inputs.version }}.sfs
        asset_name: devx_slacko_${{ github.event.inputs.version }}.sfs
        asset_content_type: application/octet-stream
    - name: Upload kernel sources
      if: github.event_name == 'workflow_dispatch'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ../woof-out_x86_64_x86_slackware64_14.2/kernel-kit/output/kernel_sources-4.4-slacko.sfs
        asset_name: kernel_sources-4.4-slacko.sfs
        asset_content_type: application/octet-stream